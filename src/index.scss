@use "./assets/fonts/fonts";

* {
    padding: 0px;
    margin: 0px;
    border: 0px;
}

*,
*:before,
*:after {
    box-sizing: border-box;
}

html {
    font-size: 16px;
}

$transparancies: (
    "full": 1,
    "hover": 0.5,
    "none ": 0,
    "90": 0.9,
    "80": 0.8,
    "70": 0.7,
    "60": 0.6,
    "50": 0.5,
    "40": 0.4,
    "30": 0.3,
    "20": 0.2,
    "10": 0.1,
);

$fontLightPalette: (
    "100": "210, 214, 219",
    "200": "180, 187, 196",
    "300": "149, 160, 173",
    "400": "126, 140, 155",
    "700": "74, 86, 99",
    "800": "59, 68, 77",
);

$fontDarkPalette: (
    "100": "210, 214, 219",
    "200": "180, 187, 196",
    "300": "149, 160, 173",
    "400": "126, 140, 155",
    "700": "74, 86, 99",
    "800": "59, 68, 77",
);

$bgLightPalette: (
    "100": "209, 196, 233",
    "200": "179, 157, 219",
    "300": "149, 117, 205",
    "400": "126, 87, 194",
    "600": "94, 53, 177",
);

$bgDarkPalette: (
    "100": "120, 132, 150",
    "200": "97, 111, 132",
    "300": "84, 97, 115",
    "400": "67, 78, 93",
    "600": "52, 60, 72",
);

$fsz: (
    "s": 0.8,
    "m": 1,
    "l": 1.2,
    "xl": 1.4,
    "xxl": 1.6,
    "huge": 5,
);

$identSize: (
    "s": 5,
    "m": 10,
    "l": 20,
    "xl": 40,
    "xxl": 80,
);

@mixin makeFontSize($prefix) {
    @each $fszName, $fszValue in $fsz {
        --#{$prefix}-#{$fszName}: #{$fszValue + "rem"};
    }
}

@mixin makeIdentSize($prefix) {
    @each $identName, $identValue in $identSize {
        --#{$prefix}-#{$identName}: #{$identValue + "px"};
    }
}

@mixin makeTransparentColors($prefix, $value) {
    @each $name, $tp in $transparancies {
        --#{$prefix}-#{$name}: #{"rgba(" + $value + "," + $tp + ")"};
    }
}

@mixin makeFontColor($prefix, $variant) {
    @if $variant == "light" {
        @each $colorIndex, $colorValue in $fontLightPalette {
            @each $tpIndex, $tpValue in $transparancies {
                --#{$prefix}-#{$colorIndex}-#{$tpIndex}: #{"rgba(" +
                    $colorValue +
                    "," +
                    $tpValue +
                    ")"};
            }
        }
    }
    @if $variant == "dark" {
        @each $colorIndex, $colorValue in $fontDarkPalette {
            @each $tpIndex, $tpValue in $transparancies {
                --#{$prefix}-#{$colorIndex}-#{$tpIndex}: #{"rgba(" +
                    $colorValue +
                    "," +
                    $tpValue +
                    ")"};
            }
        }
    }
}

@mixin makeBgColor($prefix, $variant) {
    @if $variant == "light" {
        @each $colorIndex, $colorValue in $bgLightPalette {
            @each $tpIndex, $tpValue in $transparancies {
                --#{$prefix}-#{$colorIndex}-#{$tpIndex}: #{"rgba(" +
                    $colorValue +
                    "," +
                    $tpValue +
                    ")"};
            }
        }
    }
    @if $variant == "dark" {
        @each $colorIndex, $colorValue in $bgDarkPalette {
            @each $tpIndex, $tpValue in $transparancies {
                --#{$prefix}-#{$colorIndex}-#{$tpIndex}: #{"rgba(" +
                    $colorValue +
                    "," +
                    $tpValue +
                    ")"};
            }
        }
    }
}

:root {
    &[data-theme="dark"] {
        @include makeFontColor("font", "dark");
        @include makeBgColor("bg", "dark");
    }

    &[data-theme="light"] {
        @include makeFontColor("font", "light");
        @include makeBgColor("bg", "light");
    }

    @include makeFontSize("fsz");
    @include makeIdentSize("ident");

    --warning: rgb(255, 230, 109);
    @include makeTransparentColors("warning", "255, 230, 109");

    --error: rgb(255, 107, 107);
    @include makeTransparentColors("error", "255, 107, 107");

    --header-h: 75px;
    --bar-h: 120px;
    --max-w: 1920px;
    --ident-small: 5px;
    --ident-medium: 10px;
    --ident-big: 15px;

    --boards-bar-width: 150px;

    --trs: 300ms ease;

    --brs: 5px;

    --ibm-cond: "IbmCond", sans-serif;

    --ibm: "Ibm", sans-serif;

    --border-hidden: 2px solid transparent;
    --border-error: 2px solid var(--error);


	::-webkit-scrollbar {
        width: 9px;
    }
	
	
	
    ::-webkit-scrollbar-thumb {
		background-color: var(--font-700-30);
		border-radius: var(--brs);
    }
}

body {
    font-family: var(--ibm);

    color: var(--font-100-full);

    line-height: 1.2;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-weight: inherit;
    font-size: inherit;
}

button {
    background: transparent;
    color: inherit;
    font: inherit;
    -webkit-font-smoothing: inherit;
    -moz-osx-font-smoothing: inherit;

    &::-moz-focus-inner {
        border: 0;
        padding: 0;
    }
}

li {
    list-style-type: none;
}

a {
    text-decoration: none;
}
